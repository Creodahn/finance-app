// modify default Semantic UI CSS by overriding and supplementing their
// declarations

body {
  &.dimmable {
    &.dimmed {
      &.scrolling {
        & > .dimmer {
          &.modals {
            overflow: hidden;
          }
        }
      }
    }
  }
}

div {
  &.ui {
    &.dropdown {
      & > .menu {
        & > .item {
          & > button {
            width: 100%;
          }
        }
      }

      &.selection {
        min-height: 1em;

        &:not(.active) {
          &:focus {
            border-color: rgba(34, 36, 38, .15);
          }
        }

        &.active {
          border-bottom-right-radius: .28571429rem;

          & > i {
            &.dropdown {
              &.icon {
                border-color: #96c8da;
              }
            }
          }
        }

        & > i {
          &.dropdown {
            &.icon {
              border-left: 1px solid rgba(34, 36, 38, .15);
              max-height: 100%;
            }
          }
        }

        & > .menu {
          min-width: auto;
          width: calc(100% - 35px);

          & > .item {
            padding: .25rem 1.14285714rem;
          }
        }
      }
    }
  }
}

main {
  &.ui {
    &.grid {
      & > .column {
        &.flex-display {
          @include display-flex;
        }
      }
    }
  }
}

.ui {
  &.buttons {
    & .or {
      &::before {
        line-height: 1.7em;
      }
    }
  }

  &.card {
    & .header {
      h4 {
        margin-bottom: 0;
      }
    }
  }

  &.icon {
    &.blow-up {
      @extend .flex-center;
      @include display-flex;
      @include flex-direction(column);

      height: 100%;
      min-height: 300px;
      width: 100%;

      &::before {
        font-size: 5em;
      }
    }
  }

  &.image {
    &.label {
      @include display-flex;

      overflow: hidden;

      &> .detail {
        @media screen and (max-width: 320px) {
          text-indent: -5px;
        }

        min-width: 100%;
      }

      & > .detail,
      & > .icon {
        @include display-flex;
        @include flex(1);
      }

      & > .icon {
        align-self: center;
        margin: 0;
        text-align: center;

        &.circle,
        &.sign {
          font-size: 1.25em;
          min-width: 15px;

          &::before {
            min-width: 15px;
          }
        }

        & ~ label {
          line-height: 1.25em;
        }
      }
    }
  }

  &.input {
    &.labeled {
      &.required {
        & > label {
          color: $red;

          &::after {
            color: $red;
            content: '*';
          }
        }
      }

      & > div,
      & > textarea {
        &:not(.ember-power-calendar) {
          background-color: #fff;
          border: 1px solid rgba(34, 36, 38, .15);
          border-bottom-right-radius: 4px;
          border-left-color: transparent;
          border-top-right-radius: 4px;
          color: rgba(0, 0, 0, .87);
          padding: 8px 15px;
          resize: none;
          width: 100%;

          &:disabled {
            opacity: .45;
          }
        }
      }

      & > .ember-power-calendar {
        @extend .flex-display;
        @extend .flex-column;
        @extend .flex-center;
        @extend .full-width;
        @include ember-power-calendar($cell-size: 30px);
      }

      & > .label {
        max-width: 50%;
        min-width: 90px;
      }
    }
  }

  &.list {
    & > a {
      &.item {
        &.btn-contact {
          color: #000;

          & > i {
            color: #000;
          }
        }
      }
    }

    & > button {
      &.item {
        font-family: 'Open Sans Condensed', sans-serif;
      }
    }

    & > .item {
      &.btn-contact {
        padding: 15px;

        &:first-child {
          padding-top: 15px;
        }

        &:last-child {
          padding-bottom: 15px;
        }
      }
    }

    &.animated {
      &.blog-posts {
        background-color: $off-white-a;
        padding: 10px;
        width: 100%;

        & > .item {
          @include transition(.3s);

          padding: 10px 5px;

          &:hover {
            background-color: $vivid-yellow;
          }

          & > a {
            color: rgba(0, 0, 0, .87);
          }
        }
      }
    }
  }

  &.message {
    @include box-shadow($shadow);
    @include box-sizing(border-box);
    @include transition(.5s all, .75s border-radius);

    height: auto;
    left: 0;
    margin: 10%;
    max-height: 300px;
    overflow: hidden;
    position: fixed;
    right: 0;
    top: 30px;
    white-space: nowrap;
    width: 80%;
    z-index: 50;

    &.collapsed {
      height: 54px;
      padding: 0;
      right: auto;
      width: 0;

      & > .detail {
        opacity: 0;
      }

      & > .icon-container {
        max-width: 36px;

        & > i {
          @include display-flex;

          align-items: center;
          cursor: pointer;
          font-size: 42px;
          height: 36px;
          width: 36px;
        }
      }
    }

    &:not(.collapsed) {
      & > .icon-container {
        align-items: center;
        justify-content: center;
        min-width: 80px;

        & > * {
          align-self: center;
        }
      }
    }

    &.pinned {
      z-index: 2000;
    }

    & > .detail {
      @include transition(.3s opacity);

      height: 100%;
      opacity: 1;
      overflow: hidden;
      width: 100%;
    }

    & > .icon-container {
      & > i {
        @include transition(.5s font-size);
      }
    }
  }

  &.modal {
    &.loading-mask {
      z-index: 9999;

      & > .header {
        display: none;
      }
    }

    & > i {
      &.close {
        color: #000;
        right: 1rem;
        top: 1.0535rem;
      }
    }

    & > .content {
      @include border-radius(4px);
      @include box-sizing(border-box);
      @include display-flex;
      @include flex(1);
      @include flex-direction(column);

      overflow: hidden;
    }

    &:not(.loading-mask) {
      & > .header {
        box-sizing: content-box;
        min-height: 25px;
      }
    }
  }

  &.modals {
    &.active {
      &.visible {
        & > .modal {
          &.active {
            @include transform(translateY(-50%));

            margin-top: 0 !important;
          }
        }
      }
    }
  }
}
